Механизм работы _gshell_
------------------------

Когда на вход программе подаются аргументы, перед тем как понять, что хочет
пользователь, _gshell_ всегда проверяет наличие папки проекта, и генерирует
внутренее состояние на основе ее содержимого.

Далее, в зависимости от необходимого действия, происходит вызов соответствующей
функции. Ни одна из команд не будет работать, если для ее осуществления
отсутствует, например, директория проекта. _gshell_ выдаст ошибку.

### Монтирование ревизий ###

Для каждой сессии существует свой список ревизий, которые будут в ней
использоваться. Ревизии отсортированы по времени, и, таким образом, те из них,
что старше, будут примонтированы только для чтения. Самая последняя же --
самая новая (пустая) -- будет для записи. Это и обеспечивает возможность
создания ревизии для каждого действия. Если у нас в ревизии, что замонтирована
для чтения, есть файл, который пользователь изменит, то измененная версия файла
будет уже записана в новую ревизию, что смонтирована для записи. Это реализовано
с помощью программы _unionfs_. Она обеспечивает copy-on-write технологию. То
есть файл будет записан только в том случае, если его начнут изменять. Если файл
был просто открыт и с ним ничего не сделали, то он так и останется в той
ревизии, где и был. Если же мы открыли файл и изменили его, то он скопируется и
изменится. Если мы удалили файл в нашей ревизии, то _unionfs_ пометит данный
файл как удаленный, и при дальнейшем использовании данной ревизии, мы этот файл
уже наблюдать не будем. Но если он нам понадобится, то мы можем просто взять то
состояние проекта, когда он существовал!

### Обновление сессии и фиксирование изменений ###

Когда пользователь использует проект под управлением _gshell_, он выполняет
команды в консоли. После каждой команды фиксируются изменения и обновляется
текущая сессия. Обновление --- это создание новой ревизии и монтирование
предыдущих только для чтения. Когда монтирование завершено, для пользователя
обновляется автоматически сама сессия. Это реализовано при помощи командной
оболочки _UNIX_ _*ZSH*_. В нее добавляются необходимые операции, которые
выполняются после любых команд, при условии инициализированного и включенного
_gshell_.
