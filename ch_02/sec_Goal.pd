Цель работы
-----------

_Makefile_ --- файл для утилиты автоматического создания файлов, описывающий то,
как получить финальный результат. Данные способы генерации и описывания процесса
компиляции и линковки программ широко распространены.

В настоящий момент на основе идеи _makefile_, технологии от _1977_ года, создано
большое количество утилит подобного рода. Например:

* _CMake_;
* _Cabal_;
* _Cargo_;
* _Nix_;

Все это утилиты совершенно разные, предназначены для разных языков
программирования, но объединяет их одна возможность, которой все они обладают
--- это описание способа автоматического получения результата (скомпилированной
программы, документа в PDF, состояния файловой системы и т.п.) на основе
исходных данных.

Но все они создаются таким образом, что человек сам изначально должен задать
каждое действие и поддействие. И, естественно, от каждого из них зависит
следующее. Возникает проблема --- при ошибке в одном из пунктов алгоритма
получения результата, все дальнейшие пункты будут уже работать на основе этих
ошибочных данных.

Стоит отметить, что некоторые системы сборки умеют по исходным данным и
минимальной дополнительный информации получать _makefile_'ы для воссоздания
проекта. Например, _cabal_. Данная программа умеет по исходному коду проекта на
языке _haskell_ и информации о том, что же является ключевым файлом с главной
функцией (_main_), генерировать файл проекта с расширением _.cabal_. Этот файл
позволяет скомпилировать проект и получить необходимый результат. Но, к
сожалению, данная программа умеет работать только с исходными кодами программ
или библиотек.

Что же можно предпринять для общего случая? Наиболее простым способом генерации
таких файлов автоматической сборки является самостоятельное выполнение всех
пунктов, а потом, убедившись в том, что результат является искомым, запись
данных действий в определенном формате в _makefile_.

Но в таком подходе существует сложность в построении правильной
последовательности действий для каждой компоненты (например, файла) результата.
Надо учитывать каждое действие, которое затрагивало файл, будь-то действие,
которое его изменяло или просто открывало.

К сожалению, на данный момент нет инструмента, который бы позволял наиболее
простым образом выполнять данную задачу --- задачу построения системы для
автоматического описания способа получения файла в проекте по действиям в
консоли.
