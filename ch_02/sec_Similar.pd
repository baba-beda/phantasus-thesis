Существующие методы решения
---------------------------

***В обзор!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!***

### Системы управления версиями ###

Для сохранения в явной истории ключевых состояний проекта можно использовать
систему контроля версий.

В наше время широко распространены:

* SVN[@svn]
* Git[@torvalds2010git]
* Mercurial[@mercurial]

_SVN_ (Subversion) --- централизованная система управления версиями. В наше
время ее активно вытесняет распределенная система управления версиями --- _Git_.
Отличие _svn_ от _git_ заключается в том, что вторая, как было сказано выше,
распределенная. Другими словами, если есть несколько разработчиков работающих с
репозиторием у каждого на локальной машине будет полная копия этого репозитория.
Разумеется, есть где-то и центральная машина, с которой можно клонировать
репозиторий (***совершенно необязательно***). В _git_ это похоже на SVN. Основной плюс в том, что если вдруг у
вас нет доступа к интернету, сохраняется возможность работать с репозиторием.
Потом только один раз сделать синхронизацию и все остальные разработчики получат
полную историю (**хаха, один раз**).

В целом суть работы системы контроля версий отдаленно похожа на то, что мы
хотим решить. Но цель этих инструментов совсем в ином.

Поскольку самая популярная система (***вероятно неправда: http://programmers.stackexchange.com/a/136207 ***) контроля версий на данный момент это _git_,
то рассмотрим ее.

С помощью _git_ мы можем:

* Фиксировать состояние интересующих нас файлов.
* Смотреть историю по каждому из них.
* Работать параллельно.

Но данное решение нельзя назвать удовлетворительным в рамках нашей задачи. Ведь
придется фиксировать каждое изменение, вручную указывать команду, использованную
для шага. А так же мы не сможем отследить все зависимости во время IO-действий с
файлом, что бы в дальнейшем сказать о том, какие файлы в проекте являлись
необходимыми для достижения результата, а какие были "мусором". Так же эта
система --- не самый лучший выбор для использования с большими не текстовыми
файлами.

### Galaxy ###

Одним из существующих на данный момент инструментов, что может решить нашу
задачу --- является Galaxy[@galaxy]. Это всесторонний инструмент для
воспроизводимых, доступных и прозрачных вычислений в биоинформатическом анализе. Но
в нашей задаче мы не можем применить данный инструмент, так все действия в
galaxy происходят в веб интерфейсе. И команды, которые может использовать
человек --- они связаны только с биоинформатическим анализом. Таким образом,
данное программное обеспечение ограничивает сферу своего применения.
