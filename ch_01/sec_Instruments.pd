Инструменты, которые могут быть применены
-----------------------------------------

### Язык R и библиотека Bioconductor ###

Как было сказано ранее, Bioconductor полон актуальными и широко используемыми биоинформатическими алгоритмами, в том числе и для анализа экспрессии генов. Соответственно, реализовывать их заново обычно нет необходимости и можно использовать их для достижения целей этой работы. 

### JavaScript ###

JavaScript --- мультипарадигменный скриптов язык программирования, широко используемый для создания веб-приложений.

Node.js --- [@nodejs]

### R shiny ###

### OpenCPU ###

#### Необходимые определения ####

HTTP

HTTP API

RPC

Веб-сервер

OpenCPU --- система для встроенных научных вычислений и воспроизводимых исследований, предоставляющая HTTP API для взаимодействия с R-серверами [@opencpu].
Имеется также библиотека opencpu.js для интеграции JavaScript и R.

### Gene Expression Omnibus ###

Gene Expression Omnibus (GEO) --- международный публичный репозиторий, агрегирующий и распространяющий различные формы геномных данных от исследовательского сообщества [@geo].

В библиотеке Bioconductor есть R-пакет GEOquery для удобной загрузки данных из GEO [@geoquery].

### Docker ###

Docker --- программное обеспечение для автоматизации запуска и внедрения приложений внутри контейнеров [@docker].

Для дальнейшего описания данного инструмента введем несколько определений.

Образ --- отдельный исполняемый пакет, включающий себя все необходимое для запуска единицы программного обеспечения, в том числе исходный код, библиотеки, переменные окружения, конфигурационные файлы. Зачастую образ построен на основе другого образа с дополнительной конфигураций. Образ компилируется по *Dockerfile*, каждая команда в котором соответствует новому слою. При перекомпиляции обновляются только те слои, которые изменились. 

Контейнер --- запущенный экземпляр образа. Контейнер обычно исполняется изолированно от окружения, имея доступ к файлам или портам хост-системы только при наличии соответствующей конфигурации.

В отличие от виртуальных машин, которые запускают гостевую операционную систему в каждом экземпляре, контейнеры могут разделять общее ядро, и вся информация, которая должна быть в контейнере, это исполняемый процесс и его зависимости. Исполняемые процессы из контейнеров работают как нативные процессы, и могут управляться по отдельности. 

Для контроля версий и хранения образов в открытом доступе используется Docker Hub [@dhub]. В этом хранилище можно как добавлять репозитории, управляемые вручную, так и поддерживать автоматические сборки (Automated Build), которые привязаны к репозиториям на в популярных системах контроля версий: GitHub [@github] и Bitbucket [@bitbucket]. 

### JSON ###

### Protocol Buffers ###

Protocol Buffers (Protobuf) --- гибкий, универсальный и автоматизированный механизм для сериализации структурированных данных [@protobuf].

Структура информации задается с помощью _.proto_- файлов в форме сообщений (Message). Пример такого файла можно увидеть на \inlref{листинге}{lst:protoexample}

\begin{code}[label=lst:protoexample,caption={Сообщение, структурирующее информацию о человеке}]

message Person {
  required string name = 1;
  required int32 id = 2;
  optional string email = 3;

  enum PhoneType {
    MOBILE = 0;
    HOME = 1;
    WORK = 2;
  }

  message PhoneNumber {
    required string number = 1;
    optional PhoneType type = 2 [default = HOME];
  }

  repeated PhoneNumber phone = 4;
}
\end{code}

### Apache ### 

### HTML ###
