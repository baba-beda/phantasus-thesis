\likechapter{Введение} 

В наше время очень часто приходится заниматься обработкой информации. Требуется
найти правильные пути превращения из одного состояния в другое. Для
преобразования полученной информации на компьютере чаще всего используются не
графические приложения, а наборы небольших утилит, запускаемых из консоли,
каждая из которых делает строго свою задачу.

Сейчас не так часто обычные пользователи используют для работы командную строку.
Но существует группа людей, которая это делает очень часто или всегда. Например
программисты и некоторые ученые. Очень быстро развивается биоинформатический
анализ. Появляется множество программ для обработки результатов, полученных из
изучения цепочек ДНК. Данные программы запускаются друг за другом в консоли,
получаются результаты, обрабатываются. Если человек получил удовлетворительный
результат и хочет его повторить на другом наборе данных, то ему будет сложно
воспроизводить предыдущие шаги. А если в какой-то момент какой-то шаг был не
нужен, а человек уже не помнит об этом?

Рассмотрим пример обычной работы для обработки данных. Человек, получив данные,
дает их на вход первой программе и получает результат. Затем этот результат идет
другой программе и так далее. Заканчивается этот процесс по достижению
необходимого результата. Но ведь никто не застрахован от ошибок. Если на
каком-то этапе человек сделает ошибку, то ему будет необходимо заново
воссоздавать информацию (при условии, что она не была отдельно сохранена). Чаще
всего о некорректности результата узнается на последнем этапе, когда получается
результат. Но предположив, что финальное состояние удовлетворительно, и хочется
сделать тоже самое с другими входными, то ему надо будет помнить все предыдущие
**правильные** шаги. С этим возникают трудности.

Было бы удобно иметь инструмент, который позволяет по действиям человека в
консоли воспроизводить необходимую цепочку действий, что привели к финальному
результату. Также, в дополнение, хотелось бы иметь возможность отмены действий,
просмотра зависимостей одной команды от другой. И еще было бы очень практично
иметь возможность воспроизводить данную цепочку событий для получения нужной
информации и на другом компьютере.

Были проанализированы существующие варианты решения данной задачи, рассмотрены
многие случаи использования. Потребовалось использовать сторонние библиотеки и
программы для реализации, уделено внимание их возможностям, положительным
сторонам и отрицательным.

Потребовалось исследовать способы получения информации о действии пользователя в
консоли, возможные варианты дополнения их своими.

Результатом проделанной работы стал программный комплекс, обеспечивающий
человеку однозначное представление последовательности действий, для получения
результата его работы в консоли. Также были разработаны вспомогательные
инструменты, упрощающие и расширяющие возможности работы человека в командной
строке. Результат назван программой **gshell**.

В первой главе рассматриваются основные понятия, используемые в работы, основные
технологии, а так же предметная область, где можно будет применяться решение
данной задачи.

Во второй главе рассматриваются цели, которые требуется достичь, современные
альтернативные способы решения данной задачи.

В третьей главе рассматривается реализованное программное обеспечение, его
особенности, реализация, а также трудности, возникшие во время создания.
